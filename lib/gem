
init_gem() {

    # Check for RubyGems
    if command_exists gem; then

        gem_list=$(gem list 2> /dev/null)

        # Update installed gems

        e_info "Updating RubyGems"
        gem update --no-ri --no-rdoc
        [ $? ] && e_done "Done"

        # ======================================================================
        # Install gems
        # ======================================================================

        e_info "Check for missing gems"

        local gem_list_to_install
        local -a missing_gems
        local -a desired_gems

        desired_gems=(
            'sass'
            'bourbon' # http://bourbon.io/
            'bitters' # http://bitters.bourbon.io/
            'neat' # http://neat.bourbon.io/
            'compass'
            'scss-lint'
            'middleman'
            'animation --pre'
            'susy'
        )

        for gem in $desired_gems; do
            if ! gem_exists ${gem[(w)1]}; then
                missing_gems+=("$gem")
            fi
        done
        [ $? ] && e_done "Done"

        if [[ -n "$missing_gems" ]]; then
            # Convert the array of missing formula into a list of space-separate strings
            # gem_list_to_install=$( printf "%s " $missing_gems )

            e_info "Installing missing gems..."
            # Install all missing gems
            gem install --no-ri --no-rdoc "$( printf "%s " "$missing_gems" )"

            [ $? ] && e_done "Done"
        fi


        # ======================================================================
        # Cleanup
        # ======================================================================

        e_info "Cleaning up RubyGems"

        unset gem_list
        # Remove outdated versions
        gem cleanup

        [ $? ] && e_done "Done"

    else
        printf "\n"
        e_error "Error: RubyGems not found."
        printf "Aborting...\n"
        exit
    fi

}
