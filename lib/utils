
function e_ask {
    printf "\n$1\n"
    printf "(Y/n): "
}

function e_warn {
    printf "${Yellow}Warning: $1${NC}\n"
}

function e_error {
    printf "${Red}✘ $1${NC}\n"
    exit 1
}

function e_done {
    echo "${Green}✔ Done.${NC}"
}

function e_info {
    echo "\n${Cyan}➜ ${1}${NC}"
}

function link {
    # Force create/replace the symlink.
    ln -fs "$1" "${ZDOTDIR:-$HOME}/$2"
}

function is_confirmed {
    read -rs -k 1 ans
    case $ans in
        n|N)
            printf "No\n\n"
            return 1
            ;;
        y|Y|$'\n')
            printf "Yes\n\n"
            return 0
            ;;
        *)
            printf "\n\n"
            e_error "Please type in [y]es or [n]o.\n\n"
            return 1
    esac
}

function confirmed {
    if read; then
        # echo "Is '$REPLY' right?"
        return 0
    fi
    return 1
}

# Test whether a command exists
# $1 - cmd to test
function command_exists {
    if (( $+commands[$1] )) &> /dev/null; then
      return 0
    fi
    return 1
}

# Install native apps
function cask_exists {
    if ! brew cask info "${1}" | grep "Not installed" > /dev/null; then
        printf "%s already installed.\n" "$1"
        return 0
    fi

    e_warn "Missing App: $1"
    return 1
}

# Check for installed npm packages
function npm_exists {
    if echo $npm_list | grep $1 > /dev/null; then
        printf "%s already installed.\n" "$1"
        return 0
    fi

    e_warn "Missing Package: $1"
    return 1
}

# Check for gems
function gem_exists {
    if echo $gem_list | grep "$1" > /dev/null; then
        printf "%s already installed.\n" "$1"
        return 0
    fi

    e_warn "Missing gem: $1"
    return 1
}

# Test whether a Homebrew repo is already tapped
# $1 - formula name
function tap_exists {
    if echo $brew_taplist | grep "$1" > /dev/null; then
        printf "%s already tapped.\n" "$1"
        return 0
    fi

    e_warn "Missing Tap: $1"
    return 1
}

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
function formula_exists {
    if echo $brew_formulae | grep "$1" > /dev/null; then
        printf "%s already installed.\n" "$1"
        return 0
    fi

    e_warn "Missing formula: $1"
    return 1
}


function link_prezto {

    e_info "Linking .zprezto"

    link "$base_dir/modules/prezto" ".zprezto"

    for preztofile in $base_dir/lib/prezto-overrides/^README.md(.N); do
        link "$preztofile" ".${preztofile:t}"
    done

    [ $? ] && e_done "Done"

}

function link_gem {

    e_info "Linking .gemrc"

    link "$base_dir/gem/gemrc" ".gemrc"

    [ $? ] && e_done "Done"

}

function link_vim {

    e_info "Linking .vim"

    link "$base_dir/vim" ".vim"
    link "$base_dir/vim/vimrc" ".vimrc"

    [ $? ] && e_done "Done"

}

function copy_fonts {

    e_info "Copying Fonts into the Library"

    for font in $base_dir/apps/iTerm2/Fonts/^README.md(.N); do
        cp -f "$font" "${ZDOTDIR:-$HOME}/Library/Fonts/${font:t}"
    done

    [ $? ] && e_done "Done"

}