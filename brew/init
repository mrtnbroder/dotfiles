#!/usr/bin/env zsh

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
formula_is_missing() {
  if echo $brew_formulae | grep $1 > /dev/null; then
    printf "%s already installed.\n" $1
    return 1
  fi

  echo "Missing formula: $1"
  return 0
}

init_brew() {
  # Check for Homebrew
  if command_exists brew; then

    brew_formulae=$(brew list 2> /dev/null)

    # Update Homebrew
    e_info "Updating Homebrew"
    # brew update
    [ $? ] && e_done

    # Upgrade Homebrew
    e_info "Upgrading Homebrew"
    # brew upgrade
    [ $? ] && e_done

    # source "$DOTFILES_PATH/brew/casks"
    # tap_repos

    # Install formulae

    e_info "Checking status of desired Homebrew formulae"

    local -a missing_formulae
    local -a desired_formulae

    desired_formulae=(
      'ack'
      'bash'
      'brew-cask'
      'coreutils'
      'fasd'
      'figlet'
      'gource'
      'graphicsmagick'
      'imagemagick'
      'jpeg'
      'mackup'
      'macvim --override-system-vim'
      'neovim'
      'nodenv'
      'optipng'
      'pngcrush'
      'pngquant'
      'rbenv'
      'rsync'
      'tmux'
      'tree'
      'unrar'
      'wget --enable-iri'
      'zsh'
    )

    for i in $desired_formulae; do
      if formula_is_missing "$i[(w)1]"; then
        # Store the name (and options) of every missing formula
        missing_formulae+=("$i")
      fi
    done

    [ $? ] && e_done

    if [[ -n $missing_formulae ]]; then
      # Install all missing formulae
      e_info "Installing missing Homebrew formulae"
      # Convert the array of missing formula into a list of space-separate strings
      brew install $( printf "%s " $missing_formulae )

      [ $? ] && e_done
    fi

    # source "$DOTFILES_PATH/brew/casks"
    # install_casks

    # Cleanup
    e_info "Cleaning up Brew"

    # Unset
    unset brew_formulae

    # Remove outdated versions from the Cellar
    brew cleanup

    [ $? ] && e_done
  else
    printf "\n"
    e_error "Homebrew not found.\n Aborting"
    exit
  fi
}
